#Использовать 1commands

Функция main()
	Перем чРезультат, Команда, сСтрокаКоманды, сТекстСообщения, бТолькоОстановить;
	Перем б1СРаботает, бPGРаботает, сПароль, сПараметр, мАргументы, чЭлемент;
	Перем ОК, НЕОК;
	
	// КОНСТАНТЫ
	ОК = 0; // успешное завершение скрипта
	НЕОК = 1; // скрипт закончен с ошибкой
	
	// разбор параметров
	// -stop : Остановить работающие сервисы
	// -sp (sudo password) : Пароль пользователя для выполнения операций с повышенными привелегиями
	мАргументы = АргументыКоманднойСтроки;
	Если мАргументы.Количество() = 0 Тогда
		Сообщить("Аргументы:
			| -sp <pass> (обязательно) пароль пользователя для выполнения операций с повышенными привелегиями
			| -stop (необязательно) остановить работающие сервисы", СтатусСообщения.Внимание);
		Возврат НЕОК;
	КонецЕсли;
	
	бТолькоОстановить = Ложь;
	сПароль = "";
	Для чЭлемент = 0 По мАргументы.Количество() - 1 Цикл
		Если мАргументы[чЭлемент] = "-stop" Тогда
			бТолькоОстановить = Истина;
		КонецЕсли;
		
		Если мАргументы[чЭлемент] = "-sp" Тогда
			Попытка
				сПароль = мАргументы[чЭлемент + 1];
			Исключение
				Сообщить("Не указан пароль пользователя -sp <pass>", СтатусСообщения.Внимание);
				Возврат НЕОК;
			КонецПопытки;
			чЭлемент = чЭлемент + 1;
		КонецЕсли;
	КонецЦикла;
	
	// наличие сервиса srv1cv83 и его текущий статус
	чРезультат = Работает1С();
	Если чРезультат = 2 Тогда
		Возврат НЕОК;
	ИначеЕсли чРезультат = 1 Тогда
		б1СРаботает = Ложь;
	Иначе
		б1СРаботает = Истина;
	КонецЕсли;
	
	// наличие сервиса postgresql и его текущий статус
	чРезультат = РаботаетPG();
	Если чРезультат = 2 Тогда
		Возврат НЕОК;
	ИначеЕсли чРезультат = 1 Тогда
		бPGРаботает = Ложь;
	Иначе
		бPGРаботает = Истина;
	КонецЕсли;
	
	// остановка всех работающих сервисов, если передан параметр -stop
	Если бТолькоОстановить Тогда
		Если б1СРаботает Тогда
			Стоп1С(сПароль);
		Иначе
			Сообщить("Сервис srv1cv83 уже остановлен", СтатусСообщения.Информация);
		КонецЕсли;
		
		Если бPGРаботает Тогда
			СтопPG(сПароль);
		Иначе
			Сообщить("Сервис postgresql уже остановлен", СтатусСообщения.Информация);
		КонецЕсли;
		
		Возврат ОК;
	КонецЕсли;
	
	// запуск сервиса postgresql, если нужно
	Если НЕ бPGРаботает Тогда
		Если НЕ СтартPG(сПароль) Тогда
			Возврат НЕОК;
		КонецЕсли;
	Иначе
		Сообщить("Сервис postgresql уже работает", СтатусСообщения.Информация);
	КонецЕсли;
	
	// запуск сервиса srv1cv83, если нужно
	Если НЕ б1СРаботает Тогда
		Если НЕ Старт1С(сПароль) Тогда
			Возврат НЕОК;
		КонецЕсли;
	Иначе
		Сообщить("Сервис srv1cv83 уже работает", СтатусСообщения.Информация);
	КонецЕсли;
	
	
	Возврат ОК;
КонецФункции

Функция СтартPG(сПароль)
	Перем чРезультат, Команда, сСтрокаКоманды;
	Перем бВыполненоБезОшибок;
	
	бВыполненоБезОшибок = Ложь;
	
	Сообщить("Запуск сервиса postgresql", СтатусСообщения.Информация);
	Команда = Новый Команда();
	сСтрокаКоманды = "echo %1 | sudo -S service";
	сСтрокаКоманды = СтрШаблон(сСтрокаКоманды, сПароль);
	Команда.УстановитьСтрокуЗапуска(сСтрокаКоманды);
	Команда.ДобавитьПараметр("postgresql");
	Команда.ДобавитьПараметр("start");
	чРезультат = Команда.Исполнить();
	Если чРезультат <> 0 Тогда
		Сообщить("Ошибка при запуске сервиса postgresql", СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	Сообщить("Сервис postgresql запущен", СтатусСообщения.Информация);
	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

Функция Старт1С(сПароль)
	Перем Команда, сСтрокаКоманды, чРезультат;
	Перем бВыполненоБезОшибок;
	
	бВыполненоБезОшибок = Ложь;
	
	Сообщить("Запуск сервиса srv1cv83", СтатусСообщения.Информация);
	Команда = Новый Команда();
	сСтрокаКоманды = "echo %1 | sudo -S service";
	сСтрокаКоманды = СтрШаблон(сСтрокаКоманды, сПароль);
	Команда.УстановитьСтрокуЗапуска(сСтрокаКоманды);
	Команда.ДобавитьПараметр("srv1cv83");
	Команда.ДобавитьПараметр("start");
	чРезультат = Команда.Исполнить();
	Если чРезультат <> 0 Тогда
		Сообщить("Ошибка при запуске сервиса srv1cv83", СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	Сообщить("Сервис srv1cv83 запущен", СтатусСообщения.Информация);
	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

Функция СтопPG(сПароль)
	Перем Команда, сСтрокаКоманды, чРезультат;
	Перем бВыполненоБезОшибок;

	бВыполненоБезОшибок = Ложь;

	Сообщить("Остановка сервиса postgresql", СтатусСообщения.Информация);
	Команда = Новый Команда();
	сСтрокаКоманды = "echo %1 | sudo -S service";
	сСтрокаКоманды = СтрШаблон(сСтрокаКоманды, сПароль);
	Команда.УстановитьСтрокуЗапуска(сСтрокаКоманды);
	Команда.ДобавитьПараметр("postgresql");
	Команда.ДобавитьПараметр("stop");
	чРезультат = Команда.Исполнить();
	Если чРезультат <> 0 Тогда
		Сообщить("Ошибка при остановке сервиса postgresql", СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	Сообщить("Сервис postgresql остановлен", СтатусСообщения.Информация);
	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции 

Функция Стоп1С(сПароль)
	Перем Команда, сСтрокаКоманды, чРезультат;
	Перем бВыполненоБезОшибок;
	
	бВыполненоБезОшибок = Ложь;

	Сообщить("Остановка сервиса srv1cv83", СтатусСообщения.Информация);
	Команда = Новый Команда();
	сСтрокаКоманды = "echo %1 | sudo -S service";
	сСтрокаКоманды = СтрШаблон(сСтрокаКоманды, сПароль);
	Команда.УстановитьСтрокуЗапуска(сСтрокаКоманды);
	Команда.ДобавитьПараметр("srv1cv83");
	Команда.ДобавитьПараметр("stop");
	чРезультат = Команда.Исполнить();
	Если чРезультат <> 0 Тогда
		Сообщить("Ошибка при остановке сервиса srv1cv83", СтатусСообщения.Важное);
	КонецЕсли;
	
	Сообщить("Сервис srv1cv83 остановлен", СтатусСообщения.Информация);
	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

// Проверка существования и статуса сервиса srv1cv83
//
//  Возвращаемое значение:
//   число - статус сервиса:
//      0 - есть и работает
//      1 - есть н не работает
//      2 - сервис не установлен или ошибка
//
Функция Работает1С()
	Перем Команда, сСтрокаКоманды, чРезультат, ч1СРаботает;

	Команда = Новый Команда();
	сСтрокаКоманды = "service";
	Команда.УстановитьКоманду(сСтрокаКоманды);
	Команда.ДобавитьПараметр("srv1cv83");
	Команда.ДобавитьПараметр("status");
	
	чРезультат = Команда.Исполнить();
	Если чРезультат <> 0 Тогда
		Если Найти(Команда.ПолучитьВывод(), "unrecognized service") Тогда
			Сообщить("Сервис srv1cv83 не установлен", СтатусСообщения.Важное);
		Иначе
			Сообщить("Ошибка при выполнении команды ""service srv1cv83 status""", СтатусСообщения.Важное);
		КонецЕсли;
		
		ч1СРаботает = 2;
		Возврат ч1СРаботает;
	КонецЕсли;
	
	Если Найти(Команда.ПолучитьВывод(), "NOT STARTED") Тогда
		ч1СРаботает = 1;
		Возврат ч1СРаботает;
	КонецЕсли;

	ч1СРаботает = 0;
	Возврат ч1СРаботает;
КонецФункции

// Проверка существования и статуса сервиса postgresql
//
//  Возвращаемое значение:
//   число - статус сервиса:
//      0 - есть и работает
//      1 - есть н не работает
//      2 - сервис не установлен или ошибка
//
Функция РаботаетPG()
	Перем Команда, сСтрокаКоманды, чРезультат, чPGРаботает;

	Команда = Новый Команда();
	сСтрокаКоманды = "service";
	Команда.УстановитьКоманду(сСтрокаКоманды);
	Команда.ДобавитьПараметр("postgresql");
	Команда.ДобавитьПараметр("status");
	
	чРезультат = Команда.Исполнить();
	Если чРезультат <> 0 И чРезультат <> 3 Тогда
		Если Найти(Команда.ПолучитьВывод(), "unrecognized service") Тогда
			Сообщить("Сервис postgresql не установлен", СтатусСообщения.Важное);
		Иначе
			Сообщить("Ошибка при выполнении команды ""service postgresql status""", СтатусСообщения.Важное);
		КонецЕсли;
		Сообщить("Ошибка при выполнении команды ""service postgresql status""", СтатусСообщения.Важное);
		
		чPGРаботает = 2;
		Возврат чPGРаботает;
	КонецЕсли;
	
	Если Найти(Команда.ПолучитьВывод(), "down") Тогда
		чPGРаботает = 1;
		Возврат чPGРаботает;
	КонецЕсли;
	
	чPGРаботает = 0;
	Возврат чPGРаботает;
КонецФункции

main();